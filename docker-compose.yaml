version: '3.8'
services:
  prometheus:
    image: quay.io/prometheus/prometheus:v2.29.2
    depends_on:
      - alertmanager
      - cadvisor
    volumes:
      - prometheus_data:/var/lib/prometheus
      - "./prometheus/:/etc/prometheus/"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "19090:9090"
    restart: always
    networks:
      - popduck
  node-exporter:
    image: quay.io/prometheus/node-exporter:v1.2.2
    ports:
      - '9100:9100'
    volumes:
      - '/proc:/host/proc'
      - '/sys:/host/sys'
      - '/:/rootfs'
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($$|/)"'
    restart: always
    networks:
      - popduck
  alertmanager:
    image: quay.io/prometheus/alertmanager:v0.23.0
    ports: 
      - "9093:9093"
    volumes:
      - './alertmanager/:/etc/alertmanager/'
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: always
    networks:
      - popduck
  grafana:
    image: grafana/grafana:8.1.2
    volumes:
      - grafana_data:/var/lib/grafana
      - "./grafana/provisioning/:/etc/grafana/provisioning/"
      - "./grafana/plugin/:/var/lib/grafana/plugins/"
      - "./grafana/custom.ini:/etc/grafana/custom.ini"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f {IP}:3000/api/health && echo 'ready'"]
      interval: 10s
      retries: 30
    networks:
      - popduck
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.40.0
    ports: 
      - "18080:8080"
    volumes:
#       - "/c/:/rootfs:ro"
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/:/rootfs:ro'
      - '/var/run:/var/run:rw'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'
    networks:
      - popduck
  blackbox:
    image: prom/blackbox-exporter:v0.21.1
    restart: unless-stopped
    command:
      - "--config.file=/etc/blackbox/blackbox.yml"
    volumes:
      - ./prometheus/blackbox.yml:/etc/blackbox/blackbox.yml
    networks:
      - popduck
  ## Demo app to monitor in following.
  simple_http1:
    image: dukecyber/http-go:v1.0-simple
    environment:
      - HTTP_PORT=8000
    ports:
      - "8000:8000"
    networks:
      - popduck
networks:
  popduck:
volumes:
  prometheus_data: {}
  grafana_data: {}